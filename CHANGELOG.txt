=== 2.4.5 (2020-09-11) ===
CHANGED: dependency maintenance

=== 2.4.4 (2020-07-02) ===
CHANGED: dependency maintenance

=== 2.4.3 (2020-05-18) ===
CHANGED: dependency maintenance

=== 2.4.2 (2020-03-15) ===
CHANGED: dependency maintenance

=== 2.4.1 (2019-11-02) ===
CHANGED: deps maintenance

=== 2.4.0 (2019-11-02) ===
CHANGED: to use @futoin/specs

=== 2.3.1 (2019-09-27) ===
CHANGED: dependency maintenance

=== 2.3.0 (2019-07-17) ===
CHANGED: dependency maintenance

=== 2.2.0 (2019-01-11) ===
CHANGED: dropped Node v6 support

=== 2.1.3 (2019-01-11) ===
CHANGED: dependency maintenance

=== 2.1.2 (2018-08-17) ===
FIXED: added workaround for webpack 4.16.2+

=== 2.1.1 (2018-08-11) ===
CHANGED: dependency maintenance
FIXED: invalid AsyncSteps usage on JSON error in spec loading

=== 2.1.0 (2018-06-13) ===
CHANGED: to use "ws" instead of "faye-websockets"
CHANGED: HTTP(S) comms a limited to "commConcurrency" simultaneous connections
FIXED: to control message size for Node.js WS messages
FIXED: to support in-channel Executor's max request size
NEW: "commConcurrency" option

=== 2.0.3 (2018-06-13) ===
FIXED: to allow null for parameter value, if set in spec as default
FIXED: not to check for unknown type in incomplete mixins for import use
FIXED: to properly work with very deep import chain
NEW: more verbose error for RegExp compilation issues

=== 2.0.2 (2018-06-12) ===
FIXED: lazy compilation issue of not compiling induced types used in funcs

=== 2.0.1 (2018-06-12) ===
CHANGED: all CCM instances to use global load cache
NEW: SpecTools.globalLoadCache() feature

=== 2.0.0 (2018-06-12) ===
CHANGED: minor performance and security improvements to use sealed and frozen objects.
CHANGED: large refactoring of unit tests to be more clean and use AsyncSteps.testcase
CHANGED: large refactoring of SpecTools
FIXED: not to pollute raw specs objects provided in specDirs.
FIXED: to make FTN3 revisions checks after full spec loading
FIXED: improved FTN3 feature checks for v1.4 shortcuts
NEW: more strict and verbose integrity checks during spec loading.
NEW: NativeIface interceptors optimized with eval (~9% boost)
NEW: type checking optimized with eval (~70% boost)
NEW: huge optimization of NativeIface/CCM for calls (~53% boost for internal)
NEW: optimized message checking SpecTools API
NEW: options.secureChannel support
NEW: type variants support in result vars, fields and elemtype
NEW: JSON Schema validation in development

=== 1.10.2 (2018-06-09) ===
CHANGED: upgrade futoin-asyncsteps & futoin-asyncevent
FIXED: exception on rare case of WebSockets connection close in Node.js

=== 1.10.1 (2018-06-09) ===
CHANGED: upgraded to futoin-asyncsteps v2.1 with burst execution feature

=== 1.10.0 (2018-06-06) ===
CHANGED: to use performance-enhanced futoin-asyncsteps v2

=== 1.9.3 (2018-05-25) ===
FIXED: MAC generation to work with null default parameters

=== 1.9.2 (2018-05-23) ===
FIXED: improved browser tests to use dist module
NEW: module exports Errors as alias of legacy FutoInError

=== 1.9.1 (2018-05-23) ===
FIXED: improved CBOR encoding performance by using "cbor" over "borc"
NEW: MAC base calculation

=== 1.9.0 (2018-05-21) ===
NEW: experimental FTN8 Security Concept support

=== 1.8.9 (2018-05-21) ===
FIXED: fatal issue in MAC comparison

=== 1.8.8 (2018-05-20) ===
CHANGED: improved request and response message error reporting verbosity

=== 1.8.7 (2018-05-17) ===
FIXED: missing padding for Base64 in futoin.types spec

=== 1.8.6 (2018-05-15) ===
FIXED: "items" and "regex" cache issue in diamond inheritance
NEW: more detailed SpecTools errors with type validation path

=== 1.8.5 (2018-05-12) ===
FIXED: to properly includes specs/ in package

=== 1.8.4 (2018-05-10) ===
CHANGED: upgraded webpack to v4
FIXED: Browser env WebSockets comm failure without event-emitter

=== 1.8.3 (2018-02-17) ===
CHANGED: Object.prototype is freezed only by SpecTools.secureObjectPrototype()

=== 1.8.2 (2018-02-17) ===
FIXED: CVE-2018-3721 mitigation with Object.freeze()

=== 1.8.1 (2018-01-15) ===
BREAKING CHANGE: bi-channel callbacks require futoin-executor v1.8.0+
FIXED: to correctly handle mix of message codecs in WebSockets

=== 1.8.0 (2018-01-15) ===
BREAKING CHANGE: raw download is Buffer instead of string now
NEW: more verbose spec constraints mismatch
NEW: 'data' type from FTN3 v1.9
NEW: 'BinaryData' type from FTN3 v1.9
NEW: FTN3.1 spec is available under specs/ folder now
NEW: fundamental MessageCoder feature to easily message coders
NEW: MessagePack and CBOR support for message coding

=== 1.7.7 (2018-01-12) ===
FIXED: to compare legacy HMAC with protection from timining attacks
CHANGED: moved futoin-asyncevent from peer to regular deps
NEW: added SpecTools.secureEquals()

=== 1.7.6 (2017-12-26) ===
FIXED: to use FTN15-compliant `futoin-asyncevent` instead of `event-emitter`
FIXED: improved browser/browser-lite globals consistency

=== 1.7.5 (2017-12-26) ===
NEW: fixed to assert AsyncSteps as first argument of NativeIface#call()/#.{member}()
    - aids newcomers with common mistakes

=== 1.7.4 (2017-12-17) ===
FIXED: to parse JSON spec only on 200 request status in browser
FIXED: completed ES6 conversion
CHANGED: to build dist/ folder from es5/ folder
CHANGED: not to include futoin-asyncsteps in dist/ build
NEW: added "error" emit on SpecTools JSON parse error
NEW: added ES5 transpiled modules under es5/ folder

=== 1.7.3 (2017-12-11) ===
FIXED: "unlimited" zone to use lightweight fake Limiter instead

=== 1.7.2 (2017-12-10) ===
CRITICAL FIX: upgraded to AsyncSteps with Throttle blocking fix

=== 1.7.1 (2017-12-08) ===
BREAKING CHANGE: browser entry points to non-processed ES6 file

=== 1.7.0 (2017-12-07) ===
BREAKING CHANGE: converted all code to ES6
BREAKING CHANGE: introduced FTN7 v1.7 request limit zones
NEW: webpack-based UMD dist entry point

=== 1.6.0 (2017-12-05) ===
NEW: FTN3 v1.8 "maxreqsize" & "maxrspsize" function definition attribute

=== 1.5.7 (2017-11-25) ===
FIXED: license disclaimers

=== 1.5.6 (2017-11-21) ===
FIXED: major rework of type checking in SpecTools (more clean & reliable now)
    - makes sure derived types override base type contraints
    - allows enum to be part of variant (previously failed in some scenarios)
NEW: added dump of parameter value on client-side request check failure

=== 1.5.5 (2017-10-02) ===
FIXED: to check HTTP status code in browser requests
    - affectes use of SimpleCCM with generic HTTP failures

=== 1.5.4 (2017-09-08) ===
SECURITY: fixed partial map check on skipped optional field
NEW: added SpecTool.error event for more descriptive error reporting

=== 1.5.3 (2017-09-04) ===
FIXED: added workaround for NPM: https://github.com/npm/npm/issues/16723

=== 1.5.2 (2017-09-04) ===
SECURITY: fixed ignored "elemtype" of map, if "fields" is not set
FIXED: to allow "null" as value of "any" typed field in "map"

=== 1.5.1 (2017-09-03) ===
BREAKING: "any" is not allowed to be "undefined" anymore
BREAKING: "any" is allowed to be null now
FIXED: check failure when "any" is used in type variant or custom type

=== 1.5.0 (2017-09-03) ===
BREAKING: changed futoin-asyncsteps to be peer dependency
FIXED: CCM.assertIface() to handle check for inheritted interfaces

=== 1.4.3 (2017-08-29) ===
NEW: upgraded to AsyncSteps v1.7 with FTN12 v1.8 support

=== 1.4.2 (2017-08-24) ===
FIXED: improved error handling on spec loading

=== 1.4.1 (2017-08-19) ===
FIXED: check failure when "boolean" is used in type variant

=== 1.4.0 (2017-08-18) ===
NEW: FTN7 v1.6 support

=== 1.3.2 (2017-08-18) ===
NEW: auto fallback to "-internal" credentials for internal comms
NEW: default TTL for CacheFace

=== 1.3.1 (2017-08-11) ===
BREAKING: dropped Node,js < v6 support
BREAKING: no-response requests execute in same AsyncSteps now
  - it may introduce unwanted delays
  - but it safe from bigger headaches
FIXED: LogFace to use internal queue for async log messages

=== 1.3.0 (2017-08-11) ===
FIXED: minor fixes & improvements to unit tests
CHANGED: to auto-enabled CCM prodMode, if NODE_ENV=production
NEW: FTN3 v1.7 custom result types
NEW: improved FTN3 feature vs. revision control

=== 1.2.2 (2017-08-06) ===
FIXED: not populated module.exports in repeated browser require()
FIXED: returned browser globals documentation

=== 1.2.1 (2017-08-06) ===
FIXED: not to show webpack warning on node require
FIXED: cosmetic doc & code fixes

=== 1.2.0 (2017-08-06) ===
BREAKING: removed AMD/minified dist files
FIXED: debug console.log() when Variant types are used
CHANGED: to use eslint & webpack for testing
NEW: webpack-ready
NEW: NativeIface.spec() API
NEW: FTN4 Ping-Pong client iface support

=== 1.1.0 (2017-08-04) ===
FIXED: string minlen/maxlen processing, even if regex is set
CHANGED: to check type contraints only on top type level
NEW: FTN3 v1.6 support

=== 1.0.1 (2017-08-04) ===
FIXED: to formally support FTN3 v1.5 for executor

=== 1.0.0 (2017-08-03) ===
BREAKING: removed bower support
NEW: FTN3 v1.5 support

=== 0.9.1 (2017-07-20) ===
FIXED: readme file

=== 0.9.0 (2017-07-19) ===
CHANGED: to accept null values for default "null" params
CHANGED: changed to allow type definition shortcut as per FTN3 v1.4
CHANGED: imports handling to workaround diamond problem as per FTN3: v1.4
NEW: FTN3 v1.4 support

=== 1.5.8 (2017-07-09) ===
FIXED: re-publish with proper npm packaging

=== 0.8.4 (2017-07-09) ===
CHANGED: to use FutoIn CID tool for development
NEW: Revised development tools
